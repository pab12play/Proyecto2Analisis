distribucion <- as.data.frame(distribucion)
distribucionImage <- ggplot(distribucion) + aes(x =  seq(0,1,0.1), y = distribucion) +
geom_line( size = 0.5, color='coral' ) + geom_col( width = 0.05, alpha = 0.3) +
scale_y_continuous(breaks=round(distribucion), labels = round(distribucion)) +
geom_hline(yintercept = 0, alpha = 1, color="black", size=0.5) +
geom_vline(xintercept = 0, alpha = 1, color="black", size=0.5) +
labs(title = "Proporción de cursos perdidos",
x = "Proporción", y = 'Cursos Perdidos')
#carguemos algunas reglas
soporte <- 0.01
confianza <- 0.65
reglas <- apriori(transacciones,parameter=list(sup=soporte,conf=confianza,target="rules", maxlen=5))
reglas_ordenadas_confidence = sort(x=reglas, decreasing = TRUE, by = "confidence")
reglas_ordenadas_lift = sort(x=reglas, decreasing = TRUE, by = "lift")
#plot (reglas, method = "two-key plot")
inspect(reglas_ordenadas_lift[0:10])
#guardamos los datos leidos
save(transacciones, file = "Apriori/Data/cursosPerdidosCiclos.RData")
#guardamos las reglas calculadas
save(reglas, file = paste0("Apriori/Data/cursosPerdidosCiclosReglas_Soporte-",(soporte),"_Confianza-",(confianza),".RData"))
#guardar imagenes
jpeg("Apriori/Plots/cursosPerdidosCiclosTransacciones.jpg", width=800, height=800)
transaccionesImage
dev.off()
jpeg("Apriori/Plots/cursosPerdidosCiclosFrecuencias.jpg", width=900, height=600)
frecuenciaImage
dev.off()
jpeg("Apriori/Plots/cursosPerdidosCiclosDistribuciones.jpg", width=800, height=800)
distribucionImage
dev.off()
source('cursosGanadosEstudiantes.R')
source('cursosGanadosEstudiantes.R')
source('cursosBasicosGanados.R')
source('cursosPerdidosEstudiantes.R')
source('cursosPerdidosCiclo.R')
source('cursosBasicosPerdidosCiclo.R')
source('cursosBasicosPerdidosEstudiantes.R')
source('cursosGanadosEstudiantes.R', local = TRUE)
source('cursosGanadosEstudiantes.R')
setwd("C:/Users/Abraham/Desktop/Proyecto2Analisis")
source('cursosGanadosEstudiantes.R')
source('cursosBasicosGanados.R')
source('cursosPerdidosEstudiantes.R')
source('cursosPerdidosCiclo.R')
source('cursosBasicosPerdidosCiclo.R')
source('cursosBasicosPerdidosEstudiantes.R')
setwd("C:/Users/Abraham/Desktop/Proyecto2Analisis")
source('cursosGanadosEstudiantes.R')
setwd("C:/Users/Abraham/Desktop/Proyecto2Analisis")
source('cursosGanadosEstudiantes.R', local = TRUE)
setwd("C:/Users/Abraham/Desktop/Proyecto2Analisis")
source('Apriori/cursosGanadosEstudiantes.R', local = TRUE)
setwd("C:/Users/Abraham/Desktop/Proyecto2Analisis")
source('Apriori/cursosGanadosEstudiantes.R', local = TRUE)
source('Apriori/cursosBasicosGanados.R')
source('Apriori/cursosPerdidosEstudiantes.R')
source('Apriori/cursosPerdidosCiclo.R')
source('Apriori/cursosBasicosPerdidosCiclo.R')
source('Apriori/cursosBasicosPerdidosEstudiantes.R')
setwd("C:/Users/Abraham/Desktop/Proyecto2Analisis")
source('Apriori/cursosGanadosEstudiantes.R', local = TRUE)
setwd("C:/Users/Abraham/Desktop/Proyecto2Analisis")
source('Apriori/cursosGanadosEstudiantes.R', local = TRUE)
setwd("C:/Users/Abraham/Desktop/Proyecto2Analisis")
source('Apriori/cursosGanadosEstudiantes.R', local = TRUE)
source('Apriori/cursosBasicosPerdidosCiclo.R')
source('Apriori/cursosPerdidosCiclo.R')
View(distribucionImage)
View(distribucionImage)
View(distribucionImage)
View(distribucionImage)
View(distribucionImage)
setwd("C:/Users/Abraham/Desktop/Proyecto2Analisis")
source('Apriori/cursosGanadosEstudiantes.R', local = TRUE)
View(distribucionImage)
View(distribucionImage)
setwd("C:/Users/Abraham/Desktop/Proyecto2Analisis")
source('Apriori/cursosGanadosEstudiantes.R', local = TRUE)
View(distribucionImage)
View(distribucionImage)
distribucion <- as.data.frame(distribucion)
#install.packages("readxl")
library("readxl")
source('C:/Users/Abraham/Desktop/Proyecto2Analisis/Apriori/cursosPerdidosEstudiantes.R')
#install.packages("readxl")
library("readxl")
#install.packages("factoextra")
library("factoextra")
#install.packages("gridExtra")
library("gridExtra")
#install.packages("ggplot2")
library(ggplot2)
#install.packages('arules')
library('arules')
#install.packages('grid')
library('grid')
#install.packages('arulesViz')
library('arulesViz')
setwd("C:/Users/Abraham/Desktop/Proyecto2Analisis") #comentar y agregar sus rutas
# leemos el CSV como transacciones
# estas transacciones se realizan en base a
# USUARIO y CURSOS
transacciones <- read.transactions("ProjectData/DataSets/cursosPerdidos.csv", rm.duplicates = FALSE,format="single",sep=",", header = TRUE,cols=c('ID', 'Nombre_Curso'))
summary(transacciones)
# lista de todos los cursos de los que se tiene registro que al menos un usuario ha reprobado
colnames(transacciones)
rownames(transacciones)
transaccionesImage <- image(transacciones, colors=rainbow(5))
#frecuencia de las transacciones
frecuencia_items <- itemFrequency(x = transacciones, type = "absolute")
frecuencia_items = sort(frecuencia_items, decreasing = TRUE)
frecuencia_items <- as.data.frame(frecuencia_items)
xx <- rownames(frecuencia_items)[0:15]
yy <- frecuencia_items$frecuencia_items[0:15]
#grafica de la frecuencia
frecuenciaImage <-  ggplot(data = head(frecuencia_items, 15), aes(x = reorder(xx, yy), y = yy))   +
geom_bar( position = "dodge" ,stat="identity", size=0.5 ) +
coord_flip() +
geom_hline(yintercept = 0, alpha = 1, color="black", size=0.5) +
geom_vline(xintercept = 0, alpha = 1, color="black", size=0.5) +
labs(title = "Distribución de cursos perdidos",x = 'Cursos', y = 'Cantidad de Estudiantes') #+ theme(axis.text.x = element_text(angle = 90))
#distribucion de cursos perdidos
frecuencia_items <- itemFrequency(x = transacciones, type = "absolute")
distribucion <- quantile(frecuencia_items, probs = seq(0,1,0.10))
distribucion <- as.data.frame(distribucion)
distribucionImage <- ggplot(distribucion) + aes(x =  seq(0,1,0.1), y = distribucion) +
geom_line( size = 0.5, color='coral' ) + geom_col( width = 0.05, alpha = 0.3) +
scale_y_continuous(breaks=round(distribucion), labels = round(distribucion)) +
geom_hline(yintercept = 0, alpha = 1, color="black", size=0.5) +
geom_vline(xintercept = 0, alpha = 1, color="black", size=0.5) +
labs(title = "Proporción de cursos perdidos",
x = "Proporción", y = 'Cursos Perdidos')
#carguemos algunas reglas
soporte <- 0.02
confianza <- 0.90
reglas <- apriori(transacciones,parameter=list(sup=soporte,conf=confianza,target="rules", maxlen=3))
reglas_ordenadas_confidence = sort(x=reglas, decreasing = TRUE, by = "confidence")
reglas_ordenadas_lift = sort(x=reglas, decreasing = TRUE, by = "lift")
#plot (reglas, method = "two-key plot")
inspect(reglas_ordenadas_lift[0:10])
#guardamos los datos leidos
save(transacciones, file = "Apriori/Data/cursosPerdidosEstudiantes.RData")
#guardamos las reglas calculadas
save(reglas, file = paste0("Apriori/Data/cursosPerdidosEstudiantesReglas_Soporte-",(soporte),"_Confianza-",(confianza),".RData"))
#guardar imagenes
jpeg("Apriori/Plots/cursosPerdidosEstudiantesTransacciones.jpg", width=800, height=800)
transaccionesImage
dev.off()
jpeg("Apriori/Plots/cursosPerdidosEstudiantesFrecuencias.jpg", width=900, height=600)
frecuenciaImage
dev.off()
jpeg("Apriori/Plots/cursosPerdidosEstudiantesDistribuciones.jpg", width=800, height=800)
distribucionImage
dev.off()
#install.packages("readxl")
library("readxl")
#install.packages("factoextra")
library("factoextra")
#install.packages("gridExtra")
library("gridExtra")
#install.packages("ggplot2")
library(ggplot2)
#install.packages('Matrix')
library('Matrix')
#install.packages('arules')
library('arules')
#install.packages('grid')
library('grid')
#install.packages('arulesViz')
library('arulesViz')
setwd("C:/Users/Abraham/Desktop/Proyecto2Analisis") #comentar y agregar sus rutas
# leemos el CSV como transacciones
# estas transacciones se realizan en base a
# USUARIO y CURSOS
transacciones <- read.transactions("ProjectData/DataSets/cursosPerdidos.csv", rm.duplicates = FALSE,format="single",sep=",", header = TRUE,cols=c('Nombre_Curso', 'Nombre_Ciclo'))
summary(transacciones)
# lista de todos los cursos de los que se tiene registro que al menos un usuario ha reprobado
colnames(transacciones)
rownames(transacciones)
transaccionesImage <- image(transacciones, colors=rainbow(5))
#frecuencia de las transacciones
frecuencia_items <- itemFrequency(x = transacciones, type = "absolute")
frecuencia_items = sort(frecuencia_items, decreasing = TRUE)
frecuencia_items <- as.data.frame(frecuencia_items)
xx <- rownames(frecuencia_items)
yy <- frecuencia_items$frecuencia_items
#grafica de la frecuencia
frecuenciaImage <-  ggplot(data = frecuencia_items, aes(x = reorder(xx, -yy),y = yy))   +
geom_bar( stat="identity" ) +
geom_hline(yintercept = 0, alpha = 1, color="black", size=0.5) +
geom_vline(xintercept = 0, alpha = 1, color="black", size=0.5) +
labs(title = "Distribución de cursos perdidos por ciclo", y = 'Estudiantes') +
theme(axis.text.x = element_text(angle = 90))
#distribucion de cursos perdidos
frecuencia_items <- itemFrequency(x = transacciones, type = "absolute")
distribucion <- quantile(frecuencia_items, probs = seq(0,1,0.10))
distribucion <- as.data.frame(distribucion)
distribucionImage <- ggplot(distribucion) + aes(x =  seq(0,1,0.1), y = distribucion) +
geom_line( size = 0.5, color='coral' ) + geom_col( width = 0.05, alpha = 0.3) +
scale_y_continuous(breaks=round(distribucion), labels = round(distribucion)) +
geom_hline(yintercept = 0, alpha = 1, color="black", size=0.5) +
geom_vline(xintercept = 0, alpha = 1, color="black", size=0.5) +
labs(title = "Proporción de cursos perdidos",
x = "Proporción", y = 'Cursos Perdidos')
#carguemos algunas reglas
soporte <- 0.1
confianza <- 0.95
reglas <- apriori(transacciones,parameter=list(sup=soporte,conf=confianza,target="rules", maxlen=3))
reglas_ordenadas_confidence = sort(x=reglas, decreasing = TRUE, by = "confidence")
reglas_ordenadas_lift = sort(x=reglas, decreasing = TRUE, by = "lift")
#plot (reglas, method = "two-key plot")
inspect(reglas_ordenadas_lift[0:10])
#guardamos los datos leidos
save(transacciones, file = "Apriori/Data/cursosPerdidosCiclos.RData")
#guardamos las reglas calculadas
save(reglas, file = paste0("Apriori/Data/cursosPerdidosCiclosReglas_Soporte-",(soporte),"_Confianza-",(confianza),".RData"))
#guardar imagenes
jpeg("Apriori/Plots/cursosPerdidosCiclosTransacciones.jpg", width=800, height=800)
transaccionesImage
dev.off()
jpeg("Apriori/Plots/cursosPerdidosCiclosFrecuencias.jpg", width=900, height=600)
frecuenciaImage
dev.off()
jpeg("Apriori/Plots/cursosPerdidosCiclosDistribuciones.jpg", width=800, height=800)
distribucionImage
dev.off()
#install.packages("readxl")
library("readxl")
#install.packages("factoextra")
library("factoextra")
#install.packages("gridExtra")
library("gridExtra")
#install.packages("ggplot2")
library(ggplot2)
#install.packages('Matrix')
library('Matrix')
#install.packages('arules')
library('arules')
#install.packages('grid')
library('grid')
#install.packages('arulesViz')
library('arulesViz')
setwd("C:/Users/Abraham/Desktop/Proyecto2Analisis") #comentar y agregar sus rutas
# leemos el CSV como transacciones
# estas transacciones se realizan en base a
# USUARIO y CURSOS
transacciones <- read.transactions("ProjectData/DataSets/cursosGanados.csv", rm.duplicates = FALSE,format="single",sep=",", header = TRUE,cols=c('ID', 'Nombre_Curso'))
summary(transacciones)
# lista de todos los cursos de los que se tiene registro que al menos un usuario ha reprobado
colnames(transacciones)
rownames(transacciones)
transaccionesImage <- image(transacciones, colors=rainbow(5))
#frecuencia de las transacciones
frecuencia_items <- itemFrequency(x = transacciones, type = "absolute")
frecuencia_items = sort(frecuencia_items, decreasing = TRUE)
frecuencia_items <- as.data.frame(frecuencia_items)
xx <- rownames(frecuencia_items)[0:15]
yy <- frecuencia_items$frecuencia_items[0:15]
#grafica de la frecuencia
frecuenciaImage <-  ggplot(data = head(frecuencia_items, 15), aes(x = reorder(xx, yy), y = yy))   +
geom_bar( position = "dodge" ,stat="identity", size=0.5 ) +
coord_flip() +
geom_hline(yintercept = 0, alpha = 1, color="black", size=0.5) +
geom_vline(xintercept = 0, alpha = 1, color="black", size=0.5) +
labs(title = "Distribución de cursos ganados",x = 'Cursos', y = 'Cantidad de Estudiantes') #+ theme(axis.text.x = element_text(angle = 90))
#distribucion de cursos perdidos
frecuencia_items <- itemFrequency(x = transacciones, type = "absolute")
distribucion <- quantile(frecuencia_items, probs = seq(0,1,0.10))
distribucion <- as.data.frame(distribucion)
distribucionImage <- ggplot(distribucion) + aes(x =  seq(0,1,0.1), y = distribucion) +
geom_line( size = 0.5, color='coral' ) + geom_col( width = 0.05, alpha = 0.3) +
scale_y_continuous(breaks=round(distribucion), labels = round(distribucion)) +
geom_hline(yintercept = 0, alpha = 1, color="black", size=0.5) +
geom_vline(xintercept = 0, alpha = 1, color="black", size=0.5) +
labs(title = "Proporción de cursos ganados",
x = "Proporción", y = 'Ganados')
#carguemos algunas reglas
soporte <- 0.3
confianza <- 0.90
reglas <- apriori(transacciones,parameter=list(sup=soporte,conf=confianza,target="rules", maxlen=3))
reglas_ordenadas_confidence = sort(x=reglas, decreasing = TRUE, by = "confidence")
reglas_ordenadas_lift = sort(x=reglas, decreasing = TRUE, by = "lift")
#plot (reglas, method = "two-key plot")
inspect(reglas_ordenadas_lift[0:25])
#guardamos los datos leidos
save(transacciones, file = "Apriori/Data/cursosGanadosEstudiantes.RData")
#guardamos las reglas calculadas
save(reglas, file = paste0("Apriori/Data/cursosGanadosEstudiantes_Soporte-",(soporte),"_Confianza-",(confianza),".RData"))
#guardar imagenes
jpeg("Apriori/Plots/cursosGanadosEstudiantesTransacciones.jpg", width=800, height=800)
transaccionesImage
dev.off()
jpeg("Apriori/Plots/cursosGanadosEstudiantesFrecuencias.jpg", width=900, height=600)
frecuenciaImage
dev.off()
jpeg("Apriori/Plots/cursosGanadosEstudiantesDistribuciones.jpg", width=800, height=800)
distribucionImage
dev.off()
#install.packages("readxl")
library("readxl")
#install.packages("factoextra")
library("factoextra")
#install.packages("gridExtra")
library("gridExtra")
#install.packages("ggplot2")
library(ggplot2)
#install.packages('arules')
library('arules')
#install.packages('grid')
library('grid')
#install.packages('arulesViz')
library('arulesViz')
setwd("C:/Users/Abraham/Desktop/Proyecto2Analisis") #comentar y agregar sus rutas
# leemos el CSV como transacciones
# estas transacciones se realizan en base a
# USUARIO y CURSOS
transacciones <- read.transactions("ProjectData/DataSets/cursosNumericosPerdidos.csv", rm.duplicates = FALSE,format="single",sep=",", header = TRUE,cols=c('ID', 'Nombre_Curso'))
summary(transacciones)
# lista de todos los cursos de los que se tiene registro que al menos un usuario ha reprobado
colnames(transacciones)
rownames(transacciones)
transaccionesImage <- image(transacciones, colors=rainbow(5))
#frecuencia de las transacciones
frecuencia_items <- itemFrequency(x = transacciones, type = "absolute")
frecuencia_items = sort(frecuencia_items, decreasing = TRUE)
frecuencia_items <- as.data.frame(frecuencia_items)
xx <- rownames(frecuencia_items)[0:15]
yy <- frecuencia_items$frecuencia_items[0:15]
#grafica de la frecuencia
frecuenciaImage <-  ggplot(data = head(frecuencia_items, 15), aes(x = reorder(xx, yy), y = yy))   +
geom_bar( position = "dodge" ,stat="identity", size=0.5 ) +
coord_flip() +
geom_hline(yintercept = 0, alpha = 1, color="black", size=0.5) +
geom_vline(xintercept = 0, alpha = 1, color="black", size=0.5) +
labs(title = "Distribución de cursos perdidos",x = 'Cursos', y = 'Cantidad de Estudiantes') #+ theme(axis.text.x = element_text(angle = 90))
#distribucion de cursos perdidos
frecuencia_items <- itemFrequency(x = transacciones, type = "absolute")
distribucion <- quantile(frecuencia_items, probs = seq(0,1,0.10))
distribucion <- as.data.frame(distribucion)
distribucionImage <- ggplot(distribucion) + aes(x =  seq(0,1,0.1), y = distribucion) +
geom_line( size = 0.5, color='coral' ) + geom_col( width = 0.05, alpha = 0.3) +
scale_y_continuous(breaks=round(distribucion), labels = round(distribucion)) +
geom_hline(yintercept = 0, alpha = 1, color="black", size=0.5) +
geom_vline(xintercept = 0, alpha = 1, color="black", size=0.5) +
labs(title = "Proporción de cursos perdidos",
x = "Proporción", y = 'Cursos Perdidos')
#carguemos algunas reglas
soporte <- 0.01
confianza <- 0.60
reglas <- apriori(transacciones,parameter=list(sup=soporte,conf=confianza,target="rules", maxlen=3))
reglas_ordenadas_confidence = sort(x=reglas, decreasing = TRUE, by = "confidence")
reglas_ordenadas_lift = sort(x=reglas, decreasing = TRUE, by = "lift")
#plot (reglas, method = "two-key plot")
inspect(reglas_ordenadas_lift[0:20])
#guardamos los datos leidos
save(transacciones, file = "Apriori/Data/cursosBasicosPerdidosEstudiantes.RData")
#guardamos las reglas calculadas
save(reglas, file = paste0("Apriori/Data/cursosBasicosPerdidosEstudiantesReglas_Soporte-",(soporte),"_Confianza-",(confianza),".RData"))
#guardar imagenes
jpeg("Apriori/Plots/cursosBasicosPerdidosEstudiantesTransacciones.jpg", width=800, height=800)
transaccionesImage
dev.off()
jpeg("Apriori/Plots/cursosBasicosPerdidosEstudiantesFrecuencias.jpg", width=900, height=600)
frecuenciaImage
dev.off()
jpeg("Apriori/Plots/cursosBasicosPerdidosEstudiantesDistribuciones.jpg", width=800, height=800)
distribucionImage
dev.off()
#install.packages("readxl")
library("readxl")
#install.packages("factoextra")
library("factoextra")
#install.packages("gridExtra")
library("gridExtra")
#install.packages("ggplot2")
library(ggplot2)
#install.packages('Matrix')
library('Matrix')
#install.packages('arules')
library('arules')
#install.packages('grid')
library('grid')
#install.packages('arulesViz')
library('arulesViz')
setwd("C:/Users/Abraham/Desktop/Proyecto2Analisis") #comentar y agregar sus rutas
# leemos el CSV como transacciones
# estas transacciones se realizan en base a
# USUARIO y CURSOS
transacciones <- read.transactions("ProjectData/DataSets/cursosNumericosPerdidos.csv", rm.duplicates = FALSE,format="single",sep=",", header = TRUE,cols=c('Nombre_Curso', 'Nombre_Ciclo'))
summary(transacciones)
# lista de todos los cursos de los que se tiene registro que al menos un usuario ha reprobado
colnames(transacciones)
rownames(transacciones)
transaccionesImage <- image(transacciones, colors=rainbow(5))
#frecuencia de las transacciones
frecuencia_items <- itemFrequency(x = transacciones, type = "absolute")
frecuencia_items = sort(frecuencia_items, decreasing = TRUE)
frecuencia_items <- as.data.frame(frecuencia_items)
xx <- rownames(frecuencia_items)
yy <- frecuencia_items$frecuencia_items
#grafica de la frecuencia
frecuenciaImage <-  ggplot(data = frecuencia_items, aes(x = reorder(xx, -yy),y = yy))   +
geom_bar( stat="identity" ) +
geom_hline(yintercept = 0, alpha = 1, color="black", size=0.5) +
geom_vline(xintercept = 0, alpha = 1, color="black", size=0.5) +
labs(title = "Distribución de cursos perdidos por ciclo", y = 'Estudiantes') +
theme(axis.text.x = element_text(angle = 90))
#distribucion de cursos perdidos
frecuencia_items <- itemFrequency(x = transacciones, type = "absolute")
distribucion <- quantile(frecuencia_items, probs = seq(0,1,0.10))
distribucion <- as.data.frame(distribucion)
distribucionImage <- ggplot(distribucion) + aes(x =  seq(0,1,0.1), y = distribucion) +
geom_line( size = 0.5, color='coral' ) + geom_col( width = 0.05, alpha = 0.3) +
scale_y_continuous(breaks=round(distribucion), labels = round(distribucion)) +
geom_hline(yintercept = 0, alpha = 1, color="black", size=0.5) +
geom_vline(xintercept = 0, alpha = 1, color="black", size=0.5) +
labs(title = "Proporción de cursos perdidos",
x = "Proporción", y = 'Cursos Perdidos')
#carguemos algunas reglas
soporte <- 0.01
confianza <- 0.65
reglas <- apriori(transacciones,parameter=list(sup=soporte,conf=confianza,target="rules", maxlen=5))
reglas_ordenadas_confidence = sort(x=reglas, decreasing = TRUE, by = "confidence")
reglas_ordenadas_lift = sort(x=reglas, decreasing = TRUE, by = "lift")
#plot (reglas, method = "two-key plot")
inspect(reglas_ordenadas_lift[0:10])
#guardamos los datos leidos
save(transacciones, file = "Apriori/Data/cursosPerdidosCiclos.RData")
#guardamos las reglas calculadas
save(reglas, file = paste0("Apriori/Data/cursosPerdidosCiclosReglas_Soporte-",(soporte),"_Confianza-",(confianza),".RData"))
#guardar imagenes
jpeg("Apriori/Plots/cursosPerdidosCiclosTransacciones.jpg", width=800, height=800)
transaccionesImage
dev.off()
jpeg("Apriori/Plots/cursosPerdidosCiclosFrecuencias.jpg", width=900, height=600)
frecuenciaImage
dev.off()
jpeg("Apriori/Plots/cursosPerdidosCiclosDistribuciones.jpg", width=800, height=800)
distribucionImage
dev.off()
#install.packages("readxl")
library("readxl")
#install.packages("factoextra")
library("factoextra")
#install.packages("gridExtra")
library("gridExtra")
#install.packages("ggplot2")
library(ggplot2)
#install.packages('Matrix')
library('Matrix')
#install.packages('arules')
library('arules')
#install.packages('grid')
library('grid')
#install.packages('arulesViz')
library('arulesViz')
setwd("C:/Users/Abraham/Desktop/Proyecto2Analisis") #comentar y agregar sus rutas
# leemos el CSV como transacciones
# estas transacciones se realizan en base a
# USUARIO y CURSOS
transacciones <- read.transactions("ProjectData/DataSets/cursosNumericosGanados.csv", rm.duplicates = FALSE,format="single",sep=",", header = TRUE,cols=c('ID', 'Nombre_Curso'))
summary(transacciones)
# lista de todos los cursos de los que se tiene registro que al menos un usuario ha reprobado
colnames(transacciones)
rownames(transacciones)
transaccionesImage <- image(transacciones, colors=rainbow(5))
#frecuencia de las transacciones
frecuencia_items <- itemFrequency(x = transacciones, type = "absolute")
frecuencia_items = sort(frecuencia_items, decreasing = TRUE)
frecuencia_items <- as.data.frame(frecuencia_items)
xx <- rownames(frecuencia_items)
yy <- frecuencia_items$frecuencia_items
#grafica de la frecuencia
frecuenciaImage <-  ggplot(data = frecuencia_items, aes(x = reorder(xx, yy), y = yy))   +
geom_bar( position = "dodge" ,stat="identity", size=0.5 ) +
coord_flip() +
geom_hline(yintercept = 0, alpha = 1, color="black", size=0.5) +
geom_vline(xintercept = 0, alpha = 1, color="black", size=0.5) +
labs(title = "Distribución de cursos ganados",x = 'Cursos', y = 'Cantidad de Estudiantes') #+ theme(axis.text.x = element_text(angle = 90))
#distribucion de cursos perdidos
frecuencia_items <- itemFrequency(x = transacciones, type = "absolute")
distribucion <- quantile(frecuencia_items, probs = seq(0,1,0.10))
distribucion <- as.data.frame(distribucion)
distribucionImage <- ggplot(distribucion) + aes(x =  seq(0,1,0.1), y = distribucion) +
geom_line( size = 0.5, color='coral' ) + geom_col( width = 0.05, alpha = 0.3) +
scale_y_continuous(breaks=round(distribucion), labels = round(distribucion)) +
geom_hline(yintercept = 0, alpha = 1, color="black", size=0.5) +
geom_vline(xintercept = 0, alpha = 1, color="black", size=0.5) +
labs(title = "Proporción de cursos ganados",
x = "Proporción", y = 'Ganados')
#carguemos algunas reglas
soporte <- 0.3
confianza <- 0.90
reglas <- apriori(transacciones,parameter=list(sup=soporte,conf=confianza,target="rules", maxlen=3))
reglas_ordenadas_confidence = sort(x=reglas, decreasing = TRUE, by = "confidence")
reglas_ordenadas_lift = sort(x=reglas, decreasing = TRUE, by = "lift")
#plot (reglas, method = "two-key plot")
inspect(reglas_ordenadas_lift[0:25])
#guardamos los datos leidos
save(transacciones, file = "Apriori/Data/cursosBasicosGanadosEstudiantes.RData")
#guardamos las reglas calculadas
save(reglas, file = paste0("Apriori/Data/cursosBasicosGanadosEstudiantes_Soporte-",(soporte),"_Confianza-",(confianza),".RData"))
#guardar imagenes
jpeg("Apriori/Plots/cursosBasicosGanadosEstudiantesTransacciones.jpg", width=800, height=800)
transaccionesImage
dev.off()
jpeg("Apriori/Plots/cursosBasicosGanadosEstudiantesFrecuencias.jpg", width=900, height=600)
frecuenciaImage
dev.off()
jpeg("Apriori/Plots/cursosBasicosGanadosEstudiantesDistribuciones.jpg", width=800, height=800)
distribucionImage
dev.off()
