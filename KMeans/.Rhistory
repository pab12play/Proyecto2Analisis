row.names(df) <- 1 : 4
View(df)
View(df)
attr(df, "row.names")
deparse(df)
View(df)
View(df)
View(df)
View(df)
View(df)
View(df)
row.names(df) <- NULL
attr(df, "row.names")
deparse(df)
View(df)
df <- data.frame(x = c(TRUE, FALSE, NA, NA), y = c(12, 34, 56, 78))
row.names(df) <- 1 : 4
attr(df, "row.names")
deparse(df)
View(df)
rownames(baskets.team) <- c(“Granny”, “Geraldine”)
Promedios = my_data[,c("prom_simp_x_ciclo", "cursos_acumulados")]
my_data <- read_excel("D:/Documents/Universidad/Octavo ciclo/ANÁLISIS DE DATOS/Proyecto2/ListadoPromedios.xlsx")
Promedios = my_data[,c("prom_simp_x_ciclo", "cursos_acumulados")]
rownames(Promedios) = my_data(,c("ID"))
rownames(Promedios) = c("ID")
View(Promedios)
Promedios = my_data[,c("ID", "prom_simp_x_ciclo", "cursos_acumulados")]
rownames(Promedios) = c("ID")
a <- data.frame(name=c("A", "B"), b=1:2)
View(a)
b <- data.frame(a=1:2, b=1:2)
View(b)
row.names(b) <- a$name
View(a)
View(b)
<- data.frame(name=c("A", "B"), b=1:2)
a <- data.frame(name=c("A", "B"), b=1:2)
View(a)
a
b <- data.frame(a=1:2, b=1:2)
b
b
a
b
row.names(b) <- a$name
b
row.names(Promedios) = my_data$ID
my_data <- read_excel("D:/Documents/Universidad/Octavo ciclo/ANÁLISIS DE DATOS/Proyecto2/ListadoPromedios.xlsx")
Promedios = my_data[,c("prom_simp_x_ciclo", "cursos_acumulados")]
row.names(Promedios) = my_data$ID
View(Promedios)
Promedios = scale(my_data)
Promedios = na.omit(Promedios)
set.seed(1235615)
graficaPlot = fviz_nbclust(Promedios, kmeans, method = "wss")
graficaPlot
fviz_nbclust(Promedios, kmeans, method = "wss") + geom_vline(xintercept = 3 ,linetype = 2)
graficaPlot = fviz_nbclust(Promedios, kmeans, method = "wss") + geom_vline(xintercept = 3 ,linetype = 2)
clustersK = kmeans(venta, 3, nstart = 30)
print(clustersK)
graficak3 = fviz_cluster(clustersK, data = venta)
clustersK = kmeans(venta, 3, nstart = 30)
clustersK = kmeans(Promedios, 3, nstart = 30)
print(clustersK)
graficak3 = fviz_cluster(clustersK, data = Promedios)
graficak3
clustersK = kmeans(Promedios, 2, nstart = 30)
print(clustersK)
graficak3 = fviz_cluster(clustersK, data = Promedios)
graficak3
row.names(Promedios) = my_data$ID
View(Promedios)
Promedios
View(Promedios)
View(Promedios)
clustersK = kmeans(Promedios, 2, nstart = 30)
print(clustersK)
graficak3 = fviz_cluster(clustersK, data = Promedios)
graficak3
View(graficaPlot)
View(graficaPlot)
graficaPlot
clustersK = kmeans(Promedios, 4, nstart = 30)
print(clustersK)
graficak3 = fviz_cluster(clustersK, data = Promedios)
graficak3
clustersK = kmeans(Promedios, 5, nstart = 30)
print(clustersK)
graficak3 = fviz_cluster(clustersK, data = Promedios)
graficak3
View(Promedios)
row.names(Promedios) = my_data$ID
View(Promedios)
View(Promedios)
row.names(Promedios) = my_data$ID
View(Promedios)
set.seed(51738450)
graficaPlot = fviz_nbclust(Promedios, kmeans, method = "wss") + geom_vline(xintercept = 3 ,linetype = 2)
clustersK = kmeans(Promedios, 5, nstart = 30)
print(clustersK)
graficak3 = fviz_cluster(clustersK, data = Promedios)
graficak3
Promedios = my_data[,c("cursos_acumulados", "prom_simp_x_ciclo")]
row.names(Promedios) = my_data$ID
s = data("USArrests")
Promedios = na.omit(Promedios)
set.seed(51738450)
graficaPlot = fviz_nbclust(Promedios, kmeans, method = "wss") + geom_vline(xintercept = 3 ,linetype = 2)
clustersK = kmeans(Promedios, 5, nstart = 30)
print(clustersK)
graficak3 = fviz_cluster(clustersK, data = Promedios)
graficak3
clustersK = kmeans(Promedios, 3, nstart = 30)
print(clustersK)
graficak3 = fviz_cluster(clustersK, data = Promedios)
graficak3
graficaPlot
clustersK = kmeans(Promedios, 3, nstart = 30)
print(clustersK)
graficak3 = fviz_cluster(clustersK, data = Promedios)
graficak3
View(Promedios)
row.names(Promedios) = my_data$ID
View(Promedios)
data("USArrests")      # cargamos un data set de prueba
arrestos <- scale(USArrests) # con la funcion scale ajustamos todo a la media y sd
arrestos <- na.omit(arrestos)
head(arrestos)
head(USArrests)
install.packages("factoextra") #paquete para graficar
library(factoextra) #l  ibreria de paquete instalado
#graficamos la distancia de las 4 variables usando una funcion de "distance matrix"
distancia <- get_dist(arrestos)
fviz_dist(distancia, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
set.seed(123) #seed permitira fijar un id para generar valores random
clusterk2 <- kmeans(arrestos, 2, nstart = 25)
print(clusterk)
install.packages("factoextra")
clusterk2
distancia
fviz_cluster(clusterk, data = arrestos)
clusterk3 <- kmeans(arrestos, 3, nstart = 25)
fviz_cluster(clusterk4, geom = "point",  data = arrestos)
fviz_cluster(clusterk3, geom = "point",  data = arrestos)
fviz_cluster(clusterk3, geom = "point",  data = arrestos) + ggtitle("k = 4")
fviz_cluster(clusterk3, geom = "point",  data = arrestos)
clusterk3
arrestos
graficak3
graficaPlot
set.seed(51738450)
clustersK = kmeans(Promedios, 3, nstart = 30)
print(clustersK)
graficak3 = fviz_cluster(clustersK, data = Promedios)
graficak3
clustersK = kmeans(Promedios, 3, nstart = 30)
print(clustersK)
graficak3 = fviz_cluster(clustersK, data = Promedios)
graficak3
set.seed(44957325)
clustersK = kmeans(Promedios, 3, nstart = 60)
print(clustersK)
graficak3 = fviz_cluster(clustersK, data = Promedios)
graficak3
set.seed(123456789)
clustersK = kmeans(Promedios, 3, nstart = 60)
print(clustersK)
graficak3 = fviz_cluster(clustersK, data = Promedios)
graficak3
set.seed(41208494)
set.seed(41208494)
clustersK = kmeans(Promedios, 3, nstart = 60)
print(clustersK)
graficak3 = fviz_cluster(clustersK, data = Promedios)
graficak3
clustersK = kmeans(Promedios, 3, nstart = 25)
print(clustersK)
graficak3 = fviz_cluster(clustersK, data = Promedios)
graficak3
set.seed(31119969)
clustersK = kmeans(Promedios, 3, nstart = 25)
print(clustersK)
graficak3 = fviz_cluster(clustersK, data = Promedios)
graficak3
clustersK = kmeans(Promedios, 3, nstart = 2)
print(clustersK)
graficak3 = fviz_cluster(clustersK, data = Promedios)
graficak3
set.seed(2354472788974084399)
set.seed(235447278897408439)
set.seed(235447278897408)
set.seed(23544727889)
set.seed(23544727)
graficaPlot = fviz_nbclust(Promedios, kmeans, method = "wss") + geom_vline(xintercept = 3 ,linetype = 2)
clustersK = kmeans(Promedios, 3, nstart = 2)
print(clustersK)
graficak3 = fviz_cluster(clustersK, data = Promedios)
graficak3
clustersK = kmeans(Promedios, 8, nstart = 2)
print(clustersK)
graficak3 = fviz_cluster(clustersK, data = Promedios)
graficak3
clustersK = kmeans(Promedios, 4, nstart = 2)
print(clustersK)
graficak3 = fviz_cluster(clustersK, data = Promedios)
graficak3
clustersK = kmeans(Promedios, 3, nstart = 2)
print(clustersK)
graficak3 = fviz_cluster(clustersK, data = Promedios)
graficak3
Promedios = my_data[,c("prom_simp_x_ciclo", "cursos_acumulados")]
row.names(Promedios) = my_data$ID
s = data("USArrests")
Promedios = na.omit(Promedios)
set.seed(23544727)
graficaPlot = fviz_nbclust(Promedios, kmeans, method = "wss") + geom_vline(xintercept = 3 ,linetype = 2)
clustersK = kmeans(Promedios, 3, nstart = 2)
print(clustersK)
graficak3 = fviz_cluster(clustersK, data = Promedios)
graficak3
clustersPromSimp = fviz_nbclust(Promedios, kmeans, method = "wss") + geom_vline(xintercept = 3 ,linetype = 2)
clustersPromSimp = kmeans(Promedios, 3, nstart = 2)
print(clustersPromSimp)
graficakPromSimp = fviz_cluster(clustersPromSimp, data = Promedios)
graficakPromSimp
row.names(Promedios) = my_data$ID
clustersPromSimp = kmeans(Promedios, 3, nstart = 2)
print(clustersPromSimp)
graficakPromSimp = fviz_cluster(clustersPromSimp, data = Promedios)
graficakPromSimp
Promedios = my_data[,c("prom_simp_x_ciclo", "cursos_acumulados")]
row.names(Promedios) = my_data$ID
clustersPromSimp = kmeans(Promedios, 3, nstart = 2)
print(clustersPromSimp)
graficakPromSimp = fviz_cluster(clustersPromSimp, data = Promedios)
save(Promedios, file = "Data/PromedioSimple.RData")
graficakPromSimp
install.packages("gridExtra")
library("gridExtra")
grid.arrange(clustersPromSimp, nclustersPromSimp, nrow = 2)
nclustersPromSimp = fviz_nbclust(Promedios, kmeans, method = "wss") + geom_vline(xintercept = 3 ,linetype = 2)
grid.arrange(clustersPromSimp, nclustersPromSimp, nrow = 2)
grid.arrange(clustersPromSimp, nclustersPromSimp, nrow = 2)
nclustersPromSimp = fviz_nbclust(Promedios, kmeans, method = "wss") + geom_vline(xintercept = 3 ,linetype = 2)
Promedios = my_data[,c("prom_simp_x_ciclo", "cursos_acumulados")]
row.names(Promedios) = my_data$ID
clustersPromSimp = kmeans(Promedios, 3, nstart = 2)
graficakPromSimp = fviz_cluster(clustersPromSimp, data = Promedios)
save(Promedios, file = "Data/PromedioSimple.RData")
grid.arrange(clustersPromSimp, nclustersPromSimp, nrow = 2)
nclustersPromSimp = fviz_nbclust(Promedios, kmeans, method = "wss") + geom_vline(xintercept = 3 ,linetype = 2)
Promedios = my_data[,c("prom_simp_x_ciclo", "cursos_acumulados")]
row.names(Promedios) = my_data$ID
clustersPromSimp = kmeans(Promedios, 3, nstart = 2)
graficakPromSimp = fviz_cluster(clustersPromSimp, data = Promedios)
save(Promedios, file = "Data/PromedioSimple.RData")
grid.arrange(clustersPromSimp, nclustersPromSimp, nrow = 1)
Promedios
clustersPromSimp
graficakPromSimp
nclustersPromSimp = fviz_nbclust(Promedios, kmeans, method = "wss") + geom_vline(xintercept = 3 ,linetype = 2)
Promedios = my_data[,c("prom_simp_x_ciclo", "cursos_acumulados")]
row.names(Promedios) = my_data$ID
clustersPromSimp = kmeans(Promedios, 3, nstart = 2)
graficakPromSimp = fviz_cluster(clustersPromSimp, data = Promedios)
save(Promedios, file = "Data/PromedioSimple.RData")
grid.arrange(graficakPromSimp
grid.arrange(graficakPromSimp, nclustersPromSimp, nrow = 1)
grid.arrange(graficakPromSimp, nclustersPromSimp, nrow = 1)
grid.arrange(graficakPromSimp, nclustersPromSimp, nrow = 2)
graficakPromSimp = fviz_cluster(clustersPromSimp, geom = "point", data = Promedios) + ggtitle("Promedio Simple x Numero de cursos")
grid.arrange(graficakPromSimp, nclustersPromSimp, nrow = 2)
graficakPromSimp
nclustersPromSimp = fviz_nbclust(Promedios, kmeans, method = "wss") + geom_vline(xintercept = 3 ,linetype = 2)
Promedios = my_data[,c("prom_simp_x_ciclo", "cursos_acumulados")]
row.names(Promedios) = my_data$ID
clustersPromSimp = kmeans(Promedios, 3, nstart = 2)
graficakPromSimp = fviz_cluster(clustersPromSimp, geom = "point", data = Promedios) + ggtitle("Promedio Simple x Numero de cursos")
save(Promedios, file = "Data/PromedioSimple.RData")
grid.arrange(graficakPromSimp, nclustersPromSimp, nrow = 2)
graficakPromSimp
row.names(Promedios) = my_data$ID
my_data <- read_excel("D:/Documents/Universidad/Octavo ciclo/ANÁLISIS DE DATOS/Proyecto2/ListadoPromedios.xlsx")
set.seed(23544727)
nclustersPromSimp = fviz_nbclust(Promedios, kmeans, method = "wss") + geom_vline(xintercept = 3 ,linetype = 2)
Promedios = my_data[,c("prom_simp_x_ciclo", "cursos_acumulados")]
row.names(Promedios) = my_data$ID
nclustersPromSimp = fviz_nbclust(Promedios, kmeans, method = "wss") + geom_vline(xintercept = 3 ,linetype = 2)
clustersPromSimp = kmeans(Promedios, 3, nstart = 2)
graficakPromSimp = fviz_cluster(clustersPromSimp, geom = "point", data = Promedios) + ggtitle("Promedio Simple x Numero de cursos")
graficakPromSimp
row.names(Promedios) = my_data$ID
View(Promedios)
View(Promedios)
clustersPromSimp = kmeans(Promedios, 3, nstart = 20)
graficakPromSimp = fviz_cluster(clustersPromSimp, geom = "point", data = Promedios) + ggtitle("Promedio Simple x Numero de cursos")
graficakPromSimp
Promedios = my_data[,c("prom_simp_x_ciclo", "cursos_acumulados")]
row.names(Promedios) = my_data$ID
nclustersPromSimp = fviz_nbclust(Promedios, kmeans, method = "wss") + geom_vline(xintercept = 3 ,linetype = 2)
clustersPromSimp = kmeans(Promedios, 3, nstart = 20)
graficakPromSimp = fviz_cluster(clustersPromSimp, geom = "point", data = Promedios) + ggtitle("Promedio Simple x Numero de cursos")
graficakPromSimp
Promedios = my_data[,c("prom_simp_x_ciclo", "cursos_acumulados")]
row.names(Promedios) = my_data$ID
nclustersPromSimp = fviz_nbclust(Promedios, kmeans, method = "wss") + geom_vline(xintercept = 3 ,linetype = 2)
clustersPromSimp = kmeans(Promedios, 3, nstart = 20)
graficakPromSimp = fviz_cluster(clustersPromSimp, data = Promedios) + ggtitle("Promedio Simple x Numero de cursos")
graficakPromSimp
Promedios = my_data[,c("prom_simp_x_ciclo", "cursos_acumulados")]
row.names(Promedios) = my_data$ID
nclustersPromSimp = fviz_nbclust(Promedios, kmeans, method = "wss") + geom_vline(xintercept = 3 ,linetype = 2)
clustersPromSimp = kmeans(Promedios, 3, nstart = 20)
graficakPromSimp = fviz_cluster(clustersPromSimp, data = Promedios) + ggtitle("Promedio Simple x Numero de cursos")
save(Promedios, file = "Data/PromedioSimple.RData")
grid.arrange(graficakPromSimp, nclustersPromSimp, nrow = 2)
nclustersPromSimp = fviz_nbclust(Promedios, kmeans, method = "wss") + geom_vline(xintercept = 3 ,linetype = 2) + ggtitle("Numero optimo de clusters")
grid.arrange(graficakPromSimp, nclustersPromSimp, nrow = 2)
nclustersPromSimp = fviz_nbclust(Promedios, kmeans, method = "wss") + geom_vline(xintercept = 3 ,linetype = 2) + ggtitle("Número óptimo de clusters")
grid.arrange(graficakPromSimp, nclustersPromSimp, nrow = 2)
my_data <- read_excel("D:/Documents/Universidad/Octavo ciclo/ANÁLISIS DE DATOS/Proyecto2/ListadoPromedios.xlsx")
set.seed(23544727)
#Promedio simple x numero de cursos
PromedioSimple = my_data[,c("prom_simp_x_ciclo", "cursos_acumulados")]
row.names(PromedioSimple) = my_data$ID
nclustersPromSimp = fviz_nbclust(PromedioSimple, kmeans, method = "wss") + geom_vline(xintercept = 3 ,linetype = 2) + ggtitle("Número óptimo de clusters")
clustersPromSimp = kmeans(PromedioSimple, 3, nstart = 20)
graficakPromSimp = fviz_cluster(clustersPromSimp, data = PromedioSimple) + ggtitle("Promedio Simple x Numero de cursos")
save(PromedioSimple, file = "Data/PromedioSimple.RData")
grid.arrange(graficakPromSimp, nclustersPromSimp, nrow = 2)
file = "Data/PromedioSimple.RData"
my_data <- read_excel("D:/Documents/Universidad/Octavo ciclo/ANÁLISIS DE DATOS/Proyecto2/ListadoPromedios.xlsx")
set.seed(23544727)
#Promedio simple x numero de cursos
PromedioSimple = my_data[,c("prom_simp_x_ciclo", "cursos_acumulados")]
row.names(PromedioSimple) = my_data$ID
nclustersPromSimp = fviz_nbclust(PromedioSimple, kmeans, method = "wss") + geom_vline(xintercept = 3 ,linetype = 2) + ggtitle("Número óptimo de clusters")
clustersPromSimp = kmeans(PromedioSimple, 3, nstart = 20)
graficakPromSimp = fviz_cluster(clustersPromSimp, data = PromedioSimple) + ggtitle("Promedio Simple x Numero de cursos")
save(PromedioSimple, file = "Data/PromedioSimple.RData")
grid.arrange(graficakPromSimp, nclustersPromSimp, nrow = 2)
Data/PromedioSimple.RData
load("D:/Documents/Universidad/Octavo ciclo/ANÁLISIS DE DATOS/Proyecto2/Proyecto2/Data/PromedioSimple.RData")
fviz_cluster	R Documentation
Visualize Clustering Results
Description
Provides ggplot2-based elegant visualization of partitioning methods including kmeans [stats package]; pam, clara and fanny [cluster package]; dbscan [fpc package]; Mclust [mclust package]; HCPC [FactoMineR]; hkmeans [factoextra]. Observations are represented by points in the plot, using principal components if ncol(data) > 2. An ellipse is drawn around each cluster.
Usage
fviz_cluster(object, data = NULL, stand = TRUE, geom = c("point", "text"),
repel = FALSE, show.clust.cent = TRUE, frame = TRUE,
frame.type = "convex", frame.level = 0.95, frame.alpha = 0.2,
pointsize = 2, labelsize = 4, title = "Cluster plot",
jitter = list(what = "label", width = NULL, height = NULL),
outlier.color = "black", outlier.shape = 19)
Arguments
object
an object of class "partition" created by the functions pam(), clara() or fanny() in cluster package; "kmeans" [in stats package]; "dbscan" [in fpc package]; "Mclust" [in mclust]; "hkmeans", "eclust" [in factoextra]. Possible value are also any list object with data and cluster components (e.g.: object = list(data = mydata, cluster = myclust)).
data
the data that has been used for clustering. Required only when object is a class of kmeans or dbscan.
stand
logical value; if TRUE, data is standardized before principal component analysis
geom
a text specifying the geometry to be used for the graph. Allowed values are the combination of c("point", "text"). Use "point" (to show only points); "text" to show only labels; c("point", "text") to show both types.
repel
a boolean, whether to use ggrepel to avoid overplotting text labels or not.
show.clust.cent
logical; if TRUE, shows cluster centers
frame
logical value; if TRUE, draws outline around points of each cluster
frame.type
Character specifying frame type. Possible values are 'convex' or types supporeted by ggplot2::stat_ellipse including one of c("t", "norm", "euclid").
frame.level
Passed for ggplot2::stat_ellipse 's level. Ignored in 'convex'. Default value is 0.95.
frame.alpha
Alpha for frame specifying the transparency level of fill color.
pointsize
the size of points
labelsize
font size for the labels
title
the title of the graph
jitter
a parameter used to jitter the points in order to reduce overplotting. It's a list containing the objects what, width and height (i.e jitter = list(what, width, height)).
what: the element to be jittered. Possible values are "point" or "p"; "label" or "l"; "both" or "b".
width: degree of jitter in x direction
height: degree of jitter in y direction
outlier.color, outlier.shape
the color and the shape of outliers. Outliers can be detected only in DBSCAN clustering.
Value
return a ggpplot.
Author(s)
Alboukadel Kassambara alboukadel.kassambara@gmail.com
See Also
fviz_silhouette, hcut, hkmeans, eclust, fviz_dend
Examples
set.seed(123)
# Data preparation
# +++++++++++++++
data("iris")
head(iris)
# Remove species column (5) and scale the data
iris.scaled <- scale(iris[, -5])
# K-means clustering
# +++++++++++++++++++++
km.res <- kmeans(iris.scaled, 3, nstart = 25)
# Visualize kmeans clustering
# use repel = TRUE to avoid overplotting
fviz_cluster(km.res, iris[, -5], frame.type = "norm")
# Change the color and theme
fviz_cluster(km.res, iris[, -5]) +
scale_color_brewer(palette = "Set2")+
scale_fill_brewer(palette = "Set2") +
theme_minimal()
## Not run:
# Show points only
fviz_cluster(km.res, iris[, -5], geom = "point")
# Show text only
fviz_cluster(km.res, iris[, -5], geom = "text")
grid.arrange(graficakPromSimp, nclustersPromSimp, nrow = 2)
pdf("Plots/PromedioSimple.pdf")
grid.arrange(graficakPromSimp, nclustersPromSimp, nrow = 2)
dev.off()
pdf("Plots/PromedioSimple.pdf")
grid.arrange(graficakPromSimp, nclustersPromSimp, nrow = 2)
dev.off()
pdf("Plots/PromedioSimple.pdf", width=6, height=4)
grid.arrange(graficakPromSimp, nclustersPromSimp, nrow = 2)
dev.off()
pdf("Plots/PromedioSimple.pdf", width=20, height=15)
grid.arrange(graficakPromSimp, nclustersPromSimp, nrow = 2)
dev.off()
pdf("Plots/PromedioSimple.pdf", width=20, height=15)
grid.arrange(graficakPromSimp, nclustersPromSimp, nrow = 2)
dev.off()
pdf("Plots/PromedioSimple.pdf", width=20, height=20)
grid.arrange(graficakPromSimp, nclustersPromSimp, nrow = 2)
dev.off()
pdf("Plots/PromedioSimple.pdf", width=15, height=25)
grid.arrange(graficakPromSimp, nclustersPromSimp, nrow = 2)
dev.off()
nclustersPromPond = fviz_nbclust(PromedioPonderado, kmeans, method = "wws") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("Número óptimo de clusters")
PromedioPonderado = my_data[, c("Promedio_Ponderado_Acumulado", "cursos_acumulados")]
row.names(Promedios) = my_data$ID
nclustersPromPond = fviz_nbclust(PromedioPonderado, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("Número óptimo de clusters")
nclustersPromPond
View(PromedioPonderado)
View(PromedioPonderado)
nclustersPromPond = fviz_nbclust(PromedioPonderado, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("Número óptimo de clusters")
nclustersPromPond
fviz_nbclust(PromedioPonderado, kmeans, method = "wss")
nclustersPromPond
PromedioPonderado = my_data[, c("Promedio_Ponderado_Acumulado", "cursos_acumulados")]
row.names(Promedios) = my_data$ID
nclustersPromPond = fviz_nbclust(PromedioPonderado, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("Número óptimo de clusters")
clustersPromPond = kmeans(PromedioPonderadom, 3, nstart = 30)
graficakPromPond = fviz_cluster(clustersPromPond, data = PromedioPonderado) + ggtitle("Promedio acomulado x Númeroo de cursos")
pdf("Plots/PromedioPond.pdf", width=15, height=25)
grid.arrange(graficakPromPond, nclustersPromPond, nrow = 2)
dev.off()
PromedioPonderado = my_data[, c("Promedio_Ponderado_Acumulado", "cursos_acumulados")]
row.names(Promedios) = my_data$ID
PromedioPonderado = my_data[, c("Promedio_Ponderado_Acumulado", "cursos_acumulados")]
row.names(PromedioPonderado) = my_data$ID
nclustersPromPond = fviz_nbclust(PromedioPonderado, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("Número óptimo de clusters")
clustersPromPond = kmeans(PromedioPonderadom, 3, nstart = 30)
graficakPromPond = fviz_cluster(clustersPromPond, data = PromedioPonderado) + ggtitle("Promedio acomulado x Númeroo de cursos")
pdf("Plots/PromedioPond.pdf", width=15, height=25)
grid.arrange(graficakPromPond, nclustersPromPond, nrow = 2)
dev.off()
PromedioPonderado = my_data[, c("Promedio_Ponderado_Acumulado", "cursos_acumulados")]
row.names(PromedioPonderado) = my_data$ID
nclustersPromPond = fviz_nbclust(PromedioPonderado, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("Número óptimo de clusters")
clustersPromPond = kmeans(PromedioPonderadom, 3, nstart = 30)
graficakPromPond = fviz_cluster(clustersPromPond, data = PromedioPonderado) + ggtitle("Promedio acomulado x Númeroo de cursos")
nclustersPromPond
graficakPromSimp
nclustersPromPond
clustersPromPond = kmeans(PromedioPonderadom, 3, nstart = 30)
clustersPromPond = kmeans(PromedioPonderado, 3, nstart = 30)
graficakPromPond = fviz_cluster(clustersPromPond, data = PromedioPonderado) + ggtitle("Promedio acomulado x Númeroo de cursos")
pdf("Plots/PromedioPond.pdf", width=15, height=25)
grid.arrange(graficakPromPond, nclustersPromPond, nrow = 2)
pdf("Plots/PromedioPond.pdf", width=15, height=25)
grid.arrange(graficakPromPond, nclustersPromPond, nrow = 2)
dev.off()
my_data <- read.csv("D:\Documents\Universidad\Octavo ciclo\ANÁLISIS DE DATOS\Proyecto2\Notas\119.csv")
my_data
my_data <- read_excel("D:/Documents/Universidad/Octavo ciclo/ANÁLISIS DE DATOS/Proyecto2/ListadoPromedios.xlsx")
set.seed(23544727)
#Promedio simple x numero de cursos
PromedioSimple = my_data[,c("prom_simp_x_ciclo", "cursos_acumulados")]
row.names(PromedioSimple) = my_data$ID
nclustersPromSimp = fviz_nbclust(PromedioSimple, kmeans, method = "wss") + geom_vline(xintercept = 3 ,linetype = 2) + ggtitle("Número óptimo de clusters")
clustersPromSimp = kmeans(PromedioSimple, 3, nstart = 20)
graficakPromSimp = fviz_cluster(clustersPromSimp, data = PromedioSimple) + ggtitle("Promedio Simple x Numero de cursos")
save(PromedioSimple, file = "Data/PromedioSimple.RData")
pdf("Plots/PromedioSimple.pdf", width=15, height=25)
grid.arrange(graficakPromSimp, nclustersPromSimp, nrow = 2)
dev.off()
PromedioPonderado = my_data[, c("Promedio_Ponderado_Acumulado", "cursos_acumulados")]
row.names(PromedioPonderado) = my_data$ID
nclustersPromPond = fviz_nbclust(PromedioPonderado, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("Número óptimo de clusters")
clustersPromPond = kmeans(PromedioPonderado, 3, nstart = 30)
graficakPromPond = fviz_cluster(clustersPromPond, data = PromedioPonderado) + ggtitle("Promedio acomulado x Númeroo de cursos")
pdf("Plots/PromedioPond.pdf", width=15, height=25)
grid.arrange(graficakPromPond, nclustersPromPond, nrow = 2)
dev.off()
my_data <- read.csv("D:\Documents\Universidad\Octavo ciclo\ANÁLISIS DE DATOS\Proyecto2\Notas\119.csv")
my_data <- read.csv("D:/Documents/Universidad/Octavo ciclo/ANÁLISIS DE DATOS/Proyecto2/Notas/119.csv")
View(my_data)
View(my_data)
