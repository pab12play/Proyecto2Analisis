View(dataCursosAprobados)
data("USArrests")
force(USArrests)
View(USArrests)
install.packages("animation")
dataCursosAprobados = select(1,6:11,20:22,27,29)
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
install.packages("rland")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(tidyverse)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(tidyverse)
dataCursosAprobados = select(1,6:11,20:22,27,29)
dataCursosAprobados = dataCursosAprobados[c(1,6:11,20:22,27,29)]
dataCursosAprobados <- read_csv("ProjectData/DataSets/cursosGanados.csv")
CursosAprobados = dataCursosAprobados[c(1,6:11,20:22,27,29)]
CursosAprobados
nClustersCursosAprobados = fviz_nbclust(CursosAprobados, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
#install.packages("readxl")
library("readxl")
library(readr)
#install.packages("factoextra")
library("factoextra")
#install.packages("gridExtra")
library("gridExtra")
#install.packages("ggplot2")
library(ggplot2)
library(tidyverse)
nClustersCursosAprobados = fviz_nbclust(CursosAprobados, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
nClustersCursosAprobados
clustersPromAno = kmeans(PromedioAno, 3, nstart = 30)
clustersPromAno = kmeans(CursosAprobados, 3, nstart = 30)
clustersPromAno
graficakPromAno = fviz_cluster(clustersPromAno, data = CursosAprobados) + ggtitle("Promedio acomulado x A?o (No relevante)")
graficakPromAno
nClustersCursosAprobados = fviz_nbclust(CursosAprobados, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
nClustersCursosAprobados = fviz_nbclust(CursosAprobados, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
nClustersCursosAprobados
clustersPromAno = kmeans(CursosAprobados, 2, nstart = 30)
graficakPromAno = fviz_cluster(clustersPromAno, data = CursosAprobados) + ggtitle("Promedio acomulado x A?o (No relevante)")
graficakPromAno
clustersPromAno = kmeans(CursosAprobados, 5, nstart = 30)
graficakPromAno = fviz_cluster(clustersPromAno, data = CursosAprobados) + ggtitle("Promedio acomulado x A?o (No relevante)")
graficakPromAno
clustersPromAno = kmeans(CursosAprobados, 10, nstart = 30)
graficakPromAno = fviz_cluster(clustersPromAno, data = CursosAprobados) + ggtitle("Promedio acomulado x A?o (No relevante)")
graficakPromAno
CursosAprobados = dataCursosAprobados[c(20)]
nClustersCursosAprobados = fviz_nbclust(CursosAprobados, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
nClustersCursosAprobados
clustersPromAno = kmeans(CursosAprobados, 3, nstart = 30)
graficakPromAno = fviz_cluster(clustersPromAno, data = CursosAprobados) + ggtitle("Promedio acomulado x A?o (No relevante)")
CursosAprobados = dataCursosAprobados[c(8,20)]
nClustersCursosAprobados = fviz_nbclust(CursosAprobados, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
clustersPromAno = kmeans(CursosAprobados, 3, nstart = 30)
graficakPromAno = fviz_cluster(clustersPromAno, data = CursosAprobados) + ggtitle("Promedio acomulado x A?o (No relevante)")
graficakPromAno
CursosAprobados = dataCursosAprobados[c(1,8,20)]
nClustersCursosAprobados = fviz_nbclust(CursosAprobados, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
clustersPromAno = kmeans(CursosAprobados, 3, nstart = 30)
graficakPromAno = fviz_cluster(clustersPromAno, data = CursosAprobados) + ggtitle("Promedio acomulado x A?o (No relevante)")
graficakPromAno
nClustersCursosAprobados = fviz_nbclust(CursosAprobadosScale, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
clustersPromAno = kmeans(CursosAprobadosScale, 3, nstart = 30)
CursosAprobados = dataCursosAprobados[c(1,8,20)]
CursosAprobadosScale <- scale(CursosAprobados)
nClustersCursosAprobados = fviz_nbclust(CursosAprobadosScale, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
clustersPromAno = kmeans(CursosAprobadosScale, 3, nstart = 30)
nClustersCursosAprobados
graficakPromAno = fviz_cluster(clustersPromAno, data = CursosAprobadosScale) + ggtitle("Promedio acomulado x A?o (No relevante)")
graficakPromAno
nClustersCursosAprobados
CursosAprobados = dataCursosAprobados[c(1,8,20,26,27)]
CursosAprobadosScale <- scale(CursosAprobados)
nClustersCursosAprobados = fviz_nbclust(CursosAprobadosScale, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
clustersPromAno = kmeans(CursosAprobadosScale, 3, nstart = 30)
graficakPromAno = fviz_cluster(clustersPromAno, data = CursosAprobadosScale) + ggtitle("Promedio acomulado x A?o (No relevante)")
nClustersCursosAprobados
graficakPromAno
CursosAprobados = dataCursosAprobados[c(1,6:11,20:22,27,29)]
#CursosAprobados = dataCursosAprobados[c(1,8,20,26,27)]
CursosAprobadosScale <- scale(CursosAprobados)
nClustersCursosAprobados = fviz_nbclust(CursosAprobadosScale, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
clustersPromAno = kmeans(CursosAprobadosScale, 3, nstart = 30)
graficakPromAno = fviz_cluster(clustersPromAno, data = CursosAprobadosScale) + ggtitle("Promedio acomulado x A?o (No relevante)")
graficakPromAno
CursosAprobados = dataCursosAprobados[c(1,6:11,18,20:23,26:27,29)]
#CursosAprobados = dataCursosAprobados[c(1,8,20,26,27)]
CursosAprobadosScale <- scale(CursosAprobados)
nClustersCursosAprobados = fviz_nbclust(CursosAprobadosScale, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
clustersPromAno = kmeans(CursosAprobadosScale, 3, nstart = 30)
graficakPromAno = fviz_cluster(clustersPromAno, data = CursosAprobadosScale) + ggtitle("Promedio acomulado x A?o (No relevante)")
nClustersCursosAprobados
graficakPromAno
nClustersCursosAprobados
CursosAprobados = dataCursosAprobados[c(1,6:11,18,20:23,26:27,29)]
#CursosAprobados = dataCursosAprobados[c(1,8,20,26,27)]
CursosAprobadosScale <- scale(CursosAprobados)
nClustersCursosAprobados = fviz_nbclust(CursosAprobadosScale, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
clustersPromAno = kmeans(CursosAprobadosScale, 2, nstart = 30)
graficakPromAno = fviz_cluster(clustersPromAno, data = CursosAprobadosScale) + ggtitle("Promedio acomulado x A?o (No relevante)")
graficakPromAno
clustersPromAno
nClustersCursosAprobados
CursosAprobados = dataCursosAprobados[c(1,6:11,18,20:23,26:27,29)]
#CursosAprobados = dataCursosAprobados[c(1,8,20,26,27)]
CursosAprobadosScale <- scale(CursosAprobados)
nClustersCursosAprobados = fviz_nbclust(CursosAprobadosScale, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
clustersPromAno = kmeans(CursosAprobadosScale, 8, nstart = 30)
graficakPromAno = fviz_cluster(clustersPromAno, data = CursosAprobadosScale) + ggtitle("Promedio acomulado x A?o (No relevante)")
graficakPromAno
CursosAprobados = dataCursosAprobados[c(1,6:11,18,20:23,26:27,29)]
#CursosAprobados = dataCursosAprobados[c(1,8,20,26,27)]
CursosAprobadosScale <- scale(CursosAprobados)
nClustersCursosAprobados = fviz_nbclust(CursosAprobadosScale, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
clustersPromAno = kmeans(CursosAprobadosScale, 7, nstart = 30)
graficakPromAno = fviz_cluster(clustersPromAno, data = CursosAprobadosScale) + ggtitle("Promedio acomulado x A?o (No relevante)")
graficakPromAno
nClustersCursosAprobados
CursosAprobados = dataCursosAprobados[c(1,6:11,18,20:23,26:27,29)]
#CursosAprobados = dataCursosAprobados[c(1,8,20,26,27)]
CursosAprobadosScale <- scale(CursosAprobados)
nClustersCursosAprobados = fviz_nbclust(CursosAprobadosScale, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
clustersPromAno = kmeans(CursosAprobadosScale, 9, nstart = 30)
graficakPromAno = fviz_cluster(clustersPromAno, data = CursosAprobadosScale) + ggtitle("Promedio acomulado x A?o (No relevante)")
graficakPromAno
CursosAprobados = dataCursosAprobados[c(1,6:11,18,20:23,26:27,29)]
#CursosAprobados = dataCursosAprobados[c(1,8,20,26,27)]
CursosAprobadosScale <- scale(CursosAprobados)
nClustersCursosAprobados = fviz_nbclust(CursosAprobadosScale, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
clustersPromAno = kmeans(CursosAprobadosScale, 4, nstart = 30)
graficakPromAno = fviz_cluster(clustersPromAno, data = CursosAprobadosScale) + ggtitle("Promedio acomulado x A?o (No relevante)")
graficakPromAno
CursosAprobados = dataCursosAprobados[c(1,6:11,18,20:23,26:27,29)]
#CursosAprobados = dataCursosAprobados[c(1,8,20,26,27)]
CursosAprobadosScale <- scale(CursosAprobados)
nClustersCursosAprobados = fviz_nbclust(CursosAprobadosScale, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
clustersPromAno = kmeans(CursosAprobadosScale, 5, nstart = 30)
graficakPromAno = fviz_cluster(clustersPromAno, data = CursosAprobadosScale) + ggtitle("Promedio acomulado x A?o (No relevante)")
graficakPromAno
summary(CursosAprobados)
graficakPromAno = fviz_cluster(clustersPromAno, data = CursosAprobados) + ggtitle("Promedio acomulado x A?o (No relevante)")
graficakPromAno
CursosAprobados = dataCursosAprobados[c(1,6:11,18,20:23,26:27,29)]
summary(CursosAprobados)
c=var(CursosAprobados)
CursosAprobados = dataCursosAprobados[c(1,6:11,18,20:23,26:27,29)]
summary(CursosAprobados)
var(CursosAprobados)
var(CursosAprobados$anio)
CursosAprobados = dataCursosAprobados[c(1,6:11,18,20:23,26:27,29)]
summary(CursosAprobados)
var(CursosAprobados)
CursosAprobados = dataCursosAprobados[c(1,6:8,11,18,20:23,26:27,29)]
summary(CursosAprobados)
var(CursosAprobados)
CursosAprobados = dataCursosAprobados[c(1,6:8,11,18,20,22:23,26:27,29)]
summary(CursosAprobados)
var(CursosAprobados)
#CursosAprobados = dataCursosAprobados[c(1,8,20,26,27)]
CursosAprobadosScale <- scale(CursosAprobados)
nClustersCursosAprobados = fviz_nbclust(CursosAprobadosScale, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
clustersPromAno = kmeans(CursosAprobadosScale, 5, nstart = 30)
graficakPromAno = fviz_cluster(clustersPromAno, data = CursosAprobadosScale) + ggtitle("Promedio acomulado x A?o (No relevante)")
nClustersCursosAprobados
clustersPromAno = kmeans(CursosAprobadosScale, 6, nstart = 30)
graficakPromAno = fviz_cluster(clustersPromAno, data = CursosAprobadosScale) + ggtitle("Promedio acomulado x A?o (No relevante)")
graficakPromAno
CursosAprobados.res$centers
CursosAprobados$centers
clustersCursosAprobados$centers
CursosAprobados = dataCursosAprobados[c(1,6:8,11,18,20,22:23,26:27,29)]
summary(CursosAprobados)
var(CursosAprobados)
#CursosAprobados = dataCursosAprobados[c(1,8,20,26,27)]
CursosAprobadosScale <- scale(CursosAprobados)
nClustersCursosAprobados = fviz_nbclust(CursosAprobadosScale, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
clustersCursosAprobados = kmeans(CursosAprobadosScale, 6, nstart = 30)
graficakPromAno = fviz_cluster(CursosAprobados, data = CursosAprobadosScale) + ggtitle("Promedio acomulado x A?o (No relevante)")
clustersCursosAprobados$centers
CursosAprobados = dataCursosAprobados[c(1,6:8,11,18,20,22:23,26:27,29)]
summary(CursosAprobados)
var(CursosAprobados)
var(CursosAprobados$prom_simp_x_ciclo)
#CursosAprobados = dataCursosAprobados[c(1,8,20,26,27)]
CursosAprobadosScale <- scale(CursosAprobados)
var(CursosAprobados$anio)nClustersCursosAprobados = fviz_nbclust(CursosAprobadosScale, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
CursosAprobados = dataCursosAprobados[c(1,6:8,11,18,20,22:23,26:27,29)]
summary(CursosAprobados)
var(CursosAprobados$anio)
var(CursosAprobados$prom_simp_x_ciclo)
var(CursosAprobados$prom_pond_x_ciclo)
var(CursosAprobados$cursos_x_ciclo)
var(CursosAprobados$cursos_acumulados)
var(CursosAprobados$No_curso)
var(CursosAprobados$Nota)
var(CursosAprobados$Creditos)
var(CursosAprobados$No_ciclo)
var(CursosAprobados$No_pensum)
var(CursosAprobados$No_jornada)
var(CursosAprobados$No_tip_examen)
#CursosAprobados = dataCursosAprobados[c(1,6:8,11,18,20,22:23,26:27,29)]
CursosAprobados = dataCursosAprobados[c(8,11,20)]
#CursosAprobados = dataCursosAprobados[c(1,8,20,26,27)]
CursosAprobadosScale <- scale(CursosAprobados)
nClustersCursosAprobados = fviz_nbclust(CursosAprobadosScale, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
clustersCursosAprobados = kmeans(CursosAprobadosScale, 6, nstart = 30)
graficakPromAno = fviz_cluster(CursosAprobados, data = CursosAprobadosScale) + ggtitle("Promedio acomulado x A?o (No relevante)")
nClustersCursosAprobados
clustersCursosAprobados = kmeans(CursosAprobadosScale, 4, nstart = 30)
graficakPromAno = fviz_cluster(CursosAprobados, data = CursosAprobadosScale) + ggtitle("Promedio acomulado x A?o (No relevante)")
#CursosAprobados = dataCursosAprobados[c(1,8,20,26,27)]
CursosAprobadosScale <- scale(CursosAprobados)
nClustersCursosAprobados = fviz_nbclust(CursosAprobadosScale, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
clustersCursosAprobados = kmeans(CursosAprobadosScale, 4, nstart = 30)
nClustersCursosAprobados
graficakPromAno = fviz_cluster(CursosAprobados, data = CursosAprobadosScale) + ggtitle("Promedio acomulado x A?o (No relevante)")
CursosAprobadosScale
graficakPromAno = fviz_cluster(clustersCursosAprobados, data = CursosAprobadosScale) + ggtitle("Promedio acomulado x A?o (No relevante)")
graficakPromAno
graficakPromAno = fviz_cluster(clustersCursosAprobados, data = CursosAprobadosScale) + ggtitle("Promedio acomulado x A?o (No relevante)")
graficakPromAno
clustersCursosAprobados = kmeans(CursosAprobadosScale, 3, nstart = 30)
graficakPromAno = fviz_cluster(clustersCursosAprobados, data = CursosAprobadosScale) + ggtitle("Promedio acomulado x A?o (No relevante)")
graficakPromAno
#Promedio simple x numero de cursos
PromedioSimple = my_data[,c("prom_simp_x_ciclo", "cursos_acumulados")]
row.names(PromedioSimple) = my_data$ID
nclustersPromSimp = fviz_nbclust(PromedioSimple, kmeans, method = "wss") + geom_vline(xintercept = 3 ,linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
clustersPromSimp = kmeans(PromedioSimple, 3, nstart = 20)
graficakPromSimp = fviz_cluster(clustersPromSimp, data = PromedioSimple) + ggtitle("Promedio Simple x Numero de cursos")
graficakPromSimp
CursosAprobados = dataCursosAprobados[c(8,20)]
#CursosAprobados = dataCursosAprobados[c(1,8,20,26,27)]
CursosAprobadosScale <- scale(CursosAprobados)
nClustersCursosAprobados = fviz_nbclust(CursosAprobadosScale, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
clustersCursosAprobados = kmeans(CursosAprobadosScale, 3, nstart = 30)
graficakPromAno = fviz_cluster(clustersCursosAprobados, data = CursosAprobadosScale) + ggtitle("Promedio acomulado x A?o (No relevante)")
graficakPromAno
CursosAprobados = dataCursosAprobados[c(8,11)]
#CursosAprobados = dataCursosAprobados[c(1,8,20,26,27)]
CursosAprobadosScale <- scale(CursosAprobados)
nClustersCursosAprobados = fviz_nbclust(CursosAprobadosScale, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
clustersCursosAprobados = kmeans(CursosAprobadosScale, 3, nstart = 30)
graficakPromAno = fviz_cluster(clustersCursosAprobados, data = CursosAprobadosScale) + ggtitle("Promedio acomulado x A?o (No relevante)")
graficakPromAno
CursosAprobados = dataCursosAprobados[c(6,8,11)]
#CursosAprobados = dataCursosAprobados[c(1,8,20,26,27)]
CursosAprobadosScale <- scale(CursosAprobados)
nClustersCursosAprobados = fviz_nbclust(CursosAprobadosScale, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
clustersCursosAprobados = kmeans(CursosAprobadosScale, 3, nstart = 30)
graficakPromAno = fviz_cluster(clustersCursosAprobados, data = CursosAprobadosScale) + ggtitle("Promedio acomulado x A?o (No relevante)")
graficakPromAno
clustersCursosAprobados
nClustersCursosAprobados
clustersCursosAprobados = kmeans(CursosAprobadosScale, 4, nstart = 30)
graficakPromAno = fviz_cluster(clustersCursosAprobados, data = CursosAprobadosScale) + ggtitle("Promedio acomulado x A?o (No relevante)")
graficakPromAno
clustersCursosAprobados$centers
CursosAprobados = dataCursosAprobados[c("prom_simp_x_ciclo","cursos_x_ciclo","cursos_acumulados","Nota")]
CursosAprobadosScale <- scale(CursosAprobados)
nClustersCursosAprobados = fviz_nbclust(CursosAprobadosScale, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
clustersCursosAprobados = kmeans(CursosAprobadosScale, 4, nstart = 30)
nClustersCursosAprobados
graficakPromAno = fviz_cluster(clustersCursosAprobados, data = CursosAprobadosScale) + ggtitle("Promedio acomulado x A?o (No relevante)")
graficakPromAno
CursosAprobados = dataCursosAprobados[c("prom_simp_x_ciclo","cursos_x_ciclo","cursos_acumulados")]
CursosAprobadosScale <- scale(CursosAprobados)
nClustersCursosAprobados = fviz_nbclust(CursosAprobadosScale, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
clustersCursosAprobados = kmeans(CursosAprobadosScale, 4, nstart = 30)
graficakCursosAprobados = fviz_cluster(clustersCursosAprobados, data = CursosAprobadosScale) + ggtitle("Promedio acomulado x A?o (No relevante)")
graficakCursosAprobados
CursosAprobados = dataCursosAprobados[c("prom_simp_x_ciclo","cursos_x_ciclo","cursos_acumulados")]
CursosAprobadosScale <- scale(CursosAprobados)
nClustersCursosAprobados = fviz_nbclust(CursosAprobadosScale, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("N?mero ?ptimo de clusters")
clustersCursosAprobados = kmeans(CursosAprobadosScale, 3, nstart = 30)
graficakCursosAprobados = fviz_cluster(clustersCursosAprobados, data = CursosAprobadosScale) + ggtitle("Promedio acomulado x A?o (No relevante)")
graficakCursosAprobados
nClustersCursosAprobados
clustersCursosAprobados = kmeans(CursosAprobadosScale, 5, nstart = 30)
graficakCursosAprobados = fviz_cluster(clustersCursosAprobados, data = CursosAprobadosScale) + ggtitle("Promedio acomulado x A?o (No relevante)")
graficakCursosAprobados
CursosPerdidos = dataCursosPerdidos[c("prom_simp_x_ciclo","cursos_x_ciclo","cursos_acumulados")]
CursosPerdidosScale <- scale(CursosPerdidos)
nClustersCursosPerdidos = fviz_nbclust(CursosPerdidosScale, kmeans, method = "wss") + geom_vline(xintercept = 4, linetype = 2) + ggtitle("Numero optimo de clusters")
nClustersCursosPerdidos
clustersCursosPerdidos = kmeans(CursosPerdidosScale, 4, nstart = 30)
graficakCursosPerdidos = fviz_cluster(clustersCursosPerdidos, data = CursosPerdidosScale) + ggtitle("Similitud en cursos aprobados")
graficakCursosPerdidos
clustersCursosPerdidos = kmeans(CursosPerdidosScale, 5, nstart = 30)
graficakCursosPerdidos = fviz_cluster(clustersCursosPerdidos, data = CursosPerdidosScale) + ggtitle("Similitud en cursos Perdidos")
graficakCursosPerdidos
nClustersCursosPerdidos
clustersCursosPerdidos = kmeans(CursosPerdidosScale, 7, nstart = 30)
graficakCursosPerdidos = fviz_cluster(clustersCursosPerdidos, data = CursosPerdidosScale) + ggtitle("Similitud en cursos Perdidos")
graficakCursosPerdidos
clustersCursosPerdidos = kmeans(CursosPerdidosScale, 8, nstart = 30)
graficakCursosPerdidos = fviz_cluster(clustersCursosPerdidos, data = CursosPerdidosScale) + ggtitle("Similitud en cursos Perdidos")
graficakCursosPerdidos
clustersCursosPerdidos = kmeans(CursosPerdidosScale, 15, nstart = 30)
graficakCursosPerdidos = fviz_cluster(clustersCursosPerdidos, data = CursosPerdidosScale) + ggtitle("Similitud en cursos Perdidos")
graficakCursosPerdidos
clustersCursosPerdidos = kmeans(CursosPerdidosScale, 3, nstart = 30)
graficakCursosPerdidos = fviz_cluster(clustersCursosPerdidos, data = CursosPerdidosScale) + ggtitle("Similitud en cursos Perdidos")
graficakCursosPerdidos
nClustersCursosPerdidos
graficakCursosPerdidos
clustersCursosPerdidos = kmeans(CursosPerdidosScale, 4, nstart = 30)
graficakCursosPerdidos = fviz_cluster(clustersCursosPerdidos, data = CursosPerdidosScale) + ggtitle("Similitud en cursos Perdidos")
graficakCursosPerdidos
clustersCursosPerdidos = kmeans(CursosPerdidosScale, 2, nstart = 30)
graficakCursosPerdidos = fviz_cluster(clustersCursosPerdidos, data = CursosPerdidosScale) + ggtitle("Similitud en cursos Perdidos")
graficakCursosPerdidos
clustersCursosPerdidos = kmeans(CursosPerdidosScale, 5, nstart = 30)
graficakCursosPerdidos = fviz_cluster(clustersCursosPerdidos, data = CursosPerdidosScale) + ggtitle("Similitud en cursos Perdidos")
graficakCursosPerdidos
clustersCursosPerdidos = kmeans(CursosPerdidosScale, 2, nstart = 30)
graficakCursosPerdidos = fviz_cluster(clustersCursosPerdidos, data = CursosPerdidosScale) + ggtitle("Similitud en cursos Perdidos")
graficakCursosPerdidos
CursosPerdidos = dataCursosPerdidos[c("prom_simp_x_ciclo","cursos_x_ciclo","cursos_acumulados","Nota")
CursosPerdidosScale <- scale(CursosPerdidos)
nClustersCursosPerdidos = fviz_nbclust(CursosPerdidosScale, kmeans, method = "wss") + geom_vline(xintercept = 4, linetype = 2) + ggtitle("Numero optimo de clusters")
CursosPerdidos = dataCursosPerdidos[c("prom_simp_x_ciclo","cursos_x_ciclo","cursos_acumulados","Nota")]
CursosPerdidosScale <- scale(CursosPerdidos)
nClustersCursosPerdidos = fviz_nbclust(CursosPerdidosScale, kmeans, method = "wss") + geom_vline(xintercept = 4, linetype = 2) + ggtitle("Numero optimo de clusters")
nClustersCursosPerdidos
clustersCursosPerdidos = kmeans(CursosPerdidosScale, 5, nstart = 30)
graficakCursosPerdidos = fviz_cluster(clustersCursosPerdidos, data = CursosPerdidosScale) + ggtitle("Similitud en cursos Perdidos")
graficakCursosPerdidos
clustersCursosPerdidos = kmeans(CursosPerdidosScale, 2, nstart = 30)
graficakCursosPerdidos = fviz_cluster(clustersCursosPerdidos, data = CursosPerdidosScale) + ggtitle("Similitud en cursos Perdidos")
graficakCursosPerdidos
CursosPerdidos = dataCursosPerdidos[c("prom_simp_x_ciclo","cursos_x_ciclo","Nota")]
CursosPerdidosScale <- scale(CursosPerdidos)
nClustersCursosPerdidos = fviz_nbclust(CursosPerdidosScale, kmeans, method = "wss") + geom_vline(xintercept = 4, linetype = 2) + ggtitle("Numero optimo de clusters")
clustersCursosPerdidos = kmeans(CursosPerdidosScale, 2, nstart = 30)
graficakCursosPerdidos = fviz_cluster(clustersCursosPerdidos, data = CursosPerdidosScale) + ggtitle("Similitud en cursos Perdidos")
nClustersCursosPerdidos
graficakCursosPerdidos
clustersCursosPerdidos = kmeans(CursosPerdidosScale, 4, nstart = 30)
graficakCursosPerdidos = fviz_cluster(clustersCursosPerdidos, data = CursosPerdidosScale) + ggtitle("Similitud en cursos Perdidos")
graficakCursosPerdidos
clustersCursosPerdidos = kmeans(CursosPerdidosScale, 3, nstart = 30)
graficakCursosPerdidos = fviz_cluster(clustersCursosPerdidos, data = CursosPerdidosScale) + ggtitle("Similitud en cursos Perdidos")
graficakCursosPerdidos
CursosPerdidos = dataCursosPerdidos[c("prom_simp_x_ciclo","cursos_x_ciclo","cursos_acumulados")
CursosPerdidosScale <- scale(CursosPerdidos)
nClustersCursosPerdidos = fviz_nbclust(CursosPerdidosScale, kmeans, method = "wss") + geom_vline(xintercept = 4, linetype = 2) + ggtitle("Numero optimo de clusters")
clustersCursosPerdidos = kmeans(CursosPerdidosScale, 2, nstart = 30)
graficakCursosPerdidos = fviz_cluster(clustersCursosPerdidos, data = CursosPerdidosScale) + ggtitle("Similitud en cursos Perdidos")
CursosPerdidos = dataCursosPerdidos[c("prom_simp_x_ciclo","cursos_x_ciclo","cursos_acumulados")]
CursosPerdidosScale <- scale(CursosPerdidos)
nClustersCursosPerdidos = fviz_nbclust(CursosPerdidosScale, kmeans, method = "wss") + geom_vline(xintercept = 4, linetype = 2) + ggtitle("Numero optimo de clusters")
clustersCursosPerdidos = kmeans(CursosPerdidosScale, 2, nstart = 30)
graficakCursosPerdidos = fviz_cluster(clustersCursosPerdidos, data = CursosPerdidosScale) + ggtitle("Similitud en cursos Perdidos")
graficakCursosPerdidos
nClustersCursosPerdidos
clustersCursosPerdidos
datosCompletos <- read_csv("ProjectData/DataSets/cursosCompletos.csv")
porTipoExamen = dataCompletos[c("No_tip_examen","Nota")]
porTipoExamenScale <- scale(porTipoExamen)
nClustersTipoExamen = fviz_nbclust(porTipoExamenScale, kmeans, method = "wss") + geom_vline(xintercept = 4, linetype = 2) + ggtitle("Numero optimo de clusters")
clustersTipoExamen = kmeans(porTipoExamenScale, 2, nstart = 30)
graficakTipoExamen = fviz_cluster(clustersTipoExamen, data = porTipoExamenScale) + ggtitle("Similitud en cursos Perdidos")
dataCompletos <- read_csv("ProjectData/DataSets/cursosCompletos.csv")
porTipoExamen = dataCompletos[c("No_tip_examen","Nota")]
porTipoExamenScale <- scale(porTipoExamen)
nClustersTipoExamen = fviz_nbclust(porTipoExamenScale, kmeans, method = "wss") + geom_vline(xintercept = 4, linetype = 2) + ggtitle("Numero optimo de clusters")
clustersTipoExamen = kmeans(porTipoExamenScale, 2, nstart = 30)
graficakTipoExamen = fviz_cluster(clustersTipoExamen, data = porTipoExamenScale) + ggtitle("Similitud en cursos Perdidos")
nClustersTipoExamen
clustersTipoExamen = kmeans(porTipoExamenScale, 3, nstart = 30)
graficakTipoExamen = fviz_cluster(clustersTipoExamen, data = porTipoExamenScale) + ggtitle("Similitud en cursos Perdidos")
graficakTipoExamen
clustersTipoExamen
porTipoExamen = dataCompletos[c("No_tip_examen","Nota","prom_simp_x_ciclo")]
porTipoExamenScale <- scale(porTipoExamen)
nClustersTipoExamen = fviz_nbclust(porTipoExamenScale, kmeans, method = "wss") + geom_vline(xintercept = 4, linetype = 2) + ggtitle("Numero optimo de clusters")
clustersTipoExamen = kmeans(porTipoExamenScale, 3, nstart = 30)
graficakTipoExamen = fviz_cluster(clustersTipoExamen, data = porTipoExamenScale) + ggtitle("Similitud en cursos Perdidos")
nClustersTipoExamen
graficakTipoExamen
graficakTipoExamen = fviz_cluster(clustersTipoExamen, data = porTipoExamenScale) + ggtitle("Similitud por Tipo de Examen")
graficakTipoExamen
clustersTipoExamen
clustersCursosAprobados
clustersCursosPerdidos
clustersTipoExamen
nClustersCursosAprobados
nClustersCursosAprobados = fviz_nbclust(CursosAprobadosScale, kmeans, method = "wss") + geom_vline(xintercept = 4, linetype = 2) + ggtitle("Numero optimo de clusters")
nClustersCursosAprobados
clustersCursosAprobados = kmeans(CursosAprobadosScale, 4, nstart = 30)
graficakCursosAprobados = fviz_cluster(clustersCursosAprobados, data = CursosAprobadosScale) + ggtitle("Similitud en cursos aprobados")
graficakCursosAprobados
clustersCursosAprobados
CursosAprobados = dataCursosAprobados[c("No_curso","Nota","No_tip_examen")]
CursosAprobadosScale <- scale(CursosAprobados)
nClustersCursosAprobados = fviz_nbclust(CursosAprobadosScale, kmeans, method = "wss") + geom_vline(xintercept = 4, linetype = 2) + ggtitle("Numero optimo de clusters")
clustersCursosAprobados = kmeans(CursosAprobadosScale, 4, nstart = 30)
graficakCursosAprobados = fviz_cluster(clustersCursosAprobados, data = CursosAprobadosScale) + ggtitle("Similitud en cursos aprobados")
nClustersCursosAprobados
graficakCursosAprobados
clustersCursosAprobados = kmeans(CursosAprobadosScale, 3, nstart = 30)
graficakCursosAprobados = fviz_cluster(clustersCursosAprobados, data = CursosAprobadosScale) + ggtitle("Similitud en cursos aprobados")
graficakCursosAprobados
clustersCursosAprobados
aggregate(CursosAprobados,by=list(clustersCursosAprobados$cluster),mean)
CursosAprobados
aggregate(CursosAprobados[2,3],by=list(clustersCursosAprobados$cluster),mean)
clustersCursosAprobados$cluster
aggregate(CursosAprobados,by=list(No_curso~Nota+No_tip_exmen,clustersCursosAprobados$cluster),mean)
aggregate(CursosAprobados,by=list(No_curso~Nota+No_tip_exmen,clustersCursosAprobados$cluster),mean)
aggregate(No_curso~Nota+No_tip_examen,CursosAprobados,by=list(clustersCursosAprobados$cluster),mean)
aggregate(No_curso,CursosAprobados,by=list(clustersCursosAprobados$cluster),mean)
CursosAprobados
aggregate(No_curso~.,CursosAprobados,by=list(clustersCursosAprobados$cluster),mean)
CursosAprobados = dataCursosAprobados[c("prom_simp_x_ciclo","cursos_x_ciclo","cursos_acumulados")]
CursosAprobadosScale <- scale(CursosAprobados)
nClustersCursosAprobados = fviz_nbclust(CursosAprobadosScale, kmeans, method = "wss") + geom_vline(xintercept = 4, linetype = 2) + ggtitle("Numero optimo de clusters")
clustersCursosAprobados = kmeans(CursosAprobadosScale, 4, nstart = 30)
graficakCursosAprobados = fviz_cluster(clustersCursosAprobados, data = CursosAprobadosScale) + ggtitle("Similitud en cursos aprobados")
aggregate(CursosAprobados,by=list(clustersCursosAprobados$cluster),mean)
CursosPerdidos = dataCursosPerdidos[c("prom_simp_x_ciclo","cursos_x_ciclo","cursos_acumulados")]
CursosPerdidosScale <- scale(CursosPerdidos)
nClustersCursosPerdidos = fviz_nbclust(CursosPerdidosScale, kmeans, method = "wss") + geom_vline(xintercept = 4, linetype = 2) + ggtitle("Numero optimo de clusters")
clustersCursosPerdidos = kmeans(CursosPerdidosScale, 2, nstart = 30)
graficakCursosPerdidos = fviz_cluster(clustersCursosPerdidos, data = CursosPerdidosScale) + ggtitle("Similitud en cursos Perdidos")
aggregate(CursosPerdidos,by=list(clustersCursosPerdidos$cluster),mean)
porTipoExamen = dataCompletos[c("No_tip_examen","Nota","prom_simp_x_ciclo")]
porTipoExamenScale <- scale(porTipoExamen)
nClustersTipoExamen = fviz_nbclust(porTipoExamenScale, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("Numero optimo de clusters")
clustersTipoExamen = kmeans(porTipoExamenScale, 3, nstart = 30)
graficakTipoExamen = fviz_cluster(clustersTipoExamen, data = porTipoExamenScale) + ggtitle("Similitud por Tipo de Examen")
aggregate(porTipoExamen,by=list(clustersTipoExamen$cluster),mean)
aggregate(porTipoExamen,by=list(clustersTipoExamen$cluster),mean)
porTipoExamen = dataCompletos[c("No_tip_examen","prom_simp_x_ciclo")]
porTipoExamenScale <- scale(porTipoExamen)
nClustersTipoExamen = fviz_nbclust(porTipoExamenScale, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("Numero optimo de clusters")
clustersTipoExamen = kmeans(porTipoExamenScale, 3, nstart = 30)
graficakTipoExamen = fviz_cluster(clustersTipoExamen, data = porTipoExamenScale) + ggtitle("Similitud por Tipo de Examen")
aggregate(porTipoExamen,by=list(clustersTipoExamen$cluster),mean)
clustersTipoExamen
clustersCursosPerdidos
clustersCursosAprobados
CursosPerdidos = dataCursosPerdidos[c("prom_simp_x_ciclo","cursos_x_ciclo","cursos_acumulados")]
CursosPerdidosScale <- scale(CursosPerdidos)
nClustersCursosPerdidos = fviz_nbclust(CursosPerdidosScale, kmeans, method = "wss") + geom_vline(xintercept = 4, linetype = 2) + ggtitle("Numero optimo de clusters")
clustersCursosPerdidos = kmeans(CursosPerdidosScale, 2, nstart = 30)
graficakCursosPerdidos = fviz_cluster(clustersCursosPerdidos, data = CursosPerdidosScale) + ggtitle("Similitud en cursos Perdidos")
aggregate(CursosPerdidos,by=list(clustersCursosPerdidos$cluster),mean)
# xlsx files
my_data <- read_excel("ProjectData/ListadoPromedios.xlsx")
dataCompletos <- read_csv("ProjectData/DataSets/cursosCompletos.csv")
dataCursosAprobados <- read_csv("ProjectData/DataSets/ListadoPromedios.csv")
dataCursosPerdidos <- read_csv("ProjectData//DataSets/cursosPerdidos.csv")
set.seed(23544727)
#CursosAprobados = dataCursosAprobados[c(1,6:8,11,18,20,22:23,26:27,29)]
CursosAprobados = dataCursosAprobados[c("prom_simp_x_ciclo","cursos_x_ciclo","cursos_acumulados")]
CursosAprobadosScale <- scale(CursosAprobados)
nClustersCursosAprobados = fviz_nbclust(CursosAprobadosScale, kmeans, method = "wss") + geom_vline(xintercept = 4, linetype = 2) + ggtitle("Numero optimo de clusters")
clustersCursosAprobados = kmeans(CursosAprobadosScale, 4, nstart = 30)
graficakCursosAprobados = fviz_cluster(clustersCursosAprobados, data = CursosAprobadosScale) + ggtitle("Similitud en cursos aprobados")
aggregate(CursosAprobados,by=list(clustersCursosAprobados$cluster),mean)
nClustersCursosAprobados
clustersCursosAprobados
clustersCursosAprobados = kmeans(CursosAprobadosScale, 3, nstart = 30)
clustersCursosAprobados
graficakCursosAprobados
aggregate(CursosAprobados,by=list(clustersCursosAprobados$cluster),mean)
my_data <- read_excel("ProjectData/ListadoPromedios.xlsx")
dataCompletos <- read_csv("ProjectData/DataSets/cursosCompletos.csv")
dataCursosAprobados <- read_csv("ProjectData/DataSets/ListadoPromedios.csv")
dataCursosPerdidos <- read_csv("ProjectData//DataSets/cursosPerdidos.csv")
set.seed(23544727)
CursosPerdidos = dataCursosPerdidos[c("prom_simp_x_ciclo","cursos_x_ciclo","cursos_acumulados")]
CursosPerdidosScale <- scale(CursosPerdidos)
nClustersCursosPerdidos = fviz_nbclust(CursosPerdidosScale, kmeans, method = "wss") + geom_vline(xintercept = 4, linetype = 2) + ggtitle("Numero optimo de clusters")
clustersCursosPerdidos = kmeans(CursosPerdidosScale, 2, nstart = 30)
graficakCursosPerdidos = fviz_cluster(clustersCursosPerdidos, data = CursosPerdidosScale) + ggtitle("Similitud en cursos Perdidos")
aggregate(CursosPerdidos,by=list(clustersCursosPerdidos$cluster),mean)
nClustersCursosPerdidos
clustersCursosPerdidos
clustersCursosPerdidos = kmeans(CursosPerdidosScale, 4, nstart = 30)
graficakCursosPerdidos = fviz_cluster(clustersCursosPerdidos, data = CursosPerdidosScale) + ggtitle("Similitud en cursos Perdidos")
aggregate(CursosPerdidos,by=list(clustersCursosPerdidos$cluster),mean)
graficakCursosPerdidos
clustersCursosPerdidos
clustersCursosPerdidos = kmeans(CursosPerdidosScale, 3, nstart = 30)
graficakCursosPerdidos = fviz_cluster(clustersCursosPerdidos, data = CursosPerdidosScale) + ggtitle("Similitud en cursos Perdidos")
graficakCursosPerdidos
porTipoExamen = dataCompletos[c("No_tip_examen","prom_simp_x_ciclo")]
porTipoExamenScale <- scale(porTipoExamen)
nClustersTipoExamen = fviz_nbclust(porTipoExamenScale, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("Numero optimo de clusters")
clustersTipoExamen = kmeans(porTipoExamenScale, 3, nstart = 30)
graficakTipoExamen = fviz_cluster(clustersTipoExamen, data = porTipoExamenScale) + ggtitle("Similitud por Tipo de Examen")
aggregate(porTipoExamen,by=list(clustersTipoExamen$cluster),mean)
porTipoExamen = dataCompletos[c("No_tip_examen","Nota")]
porTipoExamenScale <- scale(porTipoExamen)
nClustersTipoExamen = fviz_nbclust(porTipoExamenScale, kmeans, method = "wss") + geom_vline(xintercept = 3, linetype = 2) + ggtitle("Numero optimo de clusters")
clustersTipoExamen = kmeans(porTipoExamenScale, 3, nstart = 30)
graficakTipoExamen = fviz_cluster(clustersTipoExamen, data = porTipoExamenScale) + ggtitle("Similitud por Tipo de Examen")
aggregate(porTipoExamen,by=list(clustersTipoExamen$cluster),mean)
